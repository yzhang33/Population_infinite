"use strict";
/**
 * A collection of Error objects which can be thrown by [[HostedModel]]'s methods.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Thrown by [[HostedModel]] methods if it is a private model and no token was provided
 * during construction, or if the token is invalid.
 */
var PermissionDeniedError = /** @class */ (function (_super) {
    __extends(PermissionDeniedError, _super);
    function PermissionDeniedError() {
        return _super.call(this, "Permission denied, this model is private. Did you include the correct token?") || this;
    }
    return PermissionDeniedError;
}(Error));
exports.PermissionDeniedError = PermissionDeniedError;
/**
 * Thrown by [[HostedModel]] methods if the url doesn't match a model, or if that model is
 * not currently "active".
 */
var NotFoundError = /** @class */ (function (_super) {
    __extends(NotFoundError, _super);
    function NotFoundError() {
        return _super.call(this, "Model not found. Make sure the url is correct and that the model is \"active\".") || this;
    }
    return NotFoundError;
}(Error));
exports.NotFoundError = NotFoundError;
/**
 * Thrown by [[HostedModel.query]] if the underlying hosted model experienced an error,
 * likely due to malformed input.
 */
var ModelError = /** @class */ (function (_super) {
    __extends(ModelError, _super);
    function ModelError() {
        return _super.call(this, "The model experienced an error while processing your input. " +
            "Double-check that you are sending properly formed input parameters in HostedModel.query(). " +
            "You can use the HostedModel.info() method to check the input parameters the model expects. " +
            "If the error persists, contact support (https://support.runwayml.com).") || this;
    }
    return ModelError;
}(Error));
exports.ModelError = ModelError;
/**
 * Thrown by [[HostedModel]] if the url provided during construction is in an invalid
 * format.
 */
var InvlaidURLError = /** @class */ (function (_super) {
    __extends(InvlaidURLError, _super);
    function InvlaidURLError() {
        return _super.call(this, "The url you've provided is not valid. Your Hosted Model your must be in the format https://my-model.hosted-models.runwayml.cloud/v1.") || this;
    }
    return InvlaidURLError;
}(Error));
exports.InvlaidURLError = InvlaidURLError;
/**
 * Thrown when arguments to function or constructors are invalid.
 */
var InvalidArgumentError = /** @class */ (function (_super) {
    __extends(InvalidArgumentError, _super);
    function InvalidArgumentError(argumentName) {
        return _super.call(this, "The required argument \"" + argumentName + "\" is invalid.") || this;
    }
    return InvalidArgumentError;
}(Error));
exports.InvalidArgumentError = InvalidArgumentError;
/**
 * Thrown by [[HostedModel]]'s methods if an underlying network error occurred while
 * making an HTTP request. This likely indicates an error related to your internet
 * connection or configuration.
 */
var NetworkError = /** @class */ (function (_super) {
    __extends(NetworkError, _super);
    function NetworkError(code) {
        return _super.call(this, "A network error has ocurred" + (code ? ": " + code : "") + ". Please check your internet connection is working properly and try again.") || this;
    }
    return NetworkError;
}(Error));
exports.NetworkError = NetworkError;
/**
 * Thrown whenever an unexpected error occurs. If you experience this error, try again
 * later or [contact support](https://support.runwayml.com).
 */
var UnexpectedError = /** @class */ (function (_super) {
    __extends(UnexpectedError, _super);
    function UnexpectedError() {
        return _super.call(this, "An unexpected error has ocurred. Please try again later or contact support (https://support.runwayml.com).") || this;
    }
    return UnexpectedError;
}(Error));
exports.UnexpectedError = UnexpectedError;
//# sourceMappingURL=HTTPErrors.js.map